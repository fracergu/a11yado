---
import Layout from '../../layouts/Layout.astro'
import Checklist from '../../components/Checklist.astro'
import ToolsSection from '../../components/ToolsSection.astro'
import Banner from '../../components/Banner.astro'
import BannerGrid from '../../components/BannerGrid.astro'
import OrderedList from '../../components/OrderedList.astro'
import OrderedListItem from '../../components/OrderedListItem.astro'
import Header from '../../components/Header.astro'

const checklistItems = [
  '¬øLos estados hover son consistentes con los estados de foco?',
  '¬øEl contenido adicional es desechable con Escape?',
  '¬øSe puede hacer hover sobre el contenido adicional?',
  '¬øEl contenido permanece visible hasta ser desechado?',
  '¬øLos cambios visuales son independientes del color?',
  '¬øHay suficiente contraste entre estados?',
  '¬øTodos los hover tambi√©n funcionan con el teclado?',
  '¬øLos estados comunican claramente "interactivo"?',
]

const hoverTools = [
  {
    name: 'Navegaci√≥n combinada',
    description: 'Prueba con rat√≥n y teclado simult√°neamente',
  },
  {
    name: 'Simuladores de visi√≥n',
    description: 'NoCoffee, Stark para verificar contraste',
  },
  {
    name: 'DevTools',
    description: 'Inspecciona estados :hover y :focus juntos',
  },
  {
    name: 'Pruebas de usuario',
    description: 'Observa c√≥mo otros interpretan los estados',
  },
]
---

<Layout title="Estados Hover - a11yado">
  <article>
    <Header
      title="Estados Hover"
      description="Los estados hover mejoran la usabilidad para usuarios de rat√≥n, pero deben ser accesibles y consistentes con la navegaci√≥n por teclado para todos los usuarios."
    />

    <section>
      <h2>¬øSon esenciales los estados hover?</h2>
      <p>
        Seg√∫n WCAG, <strong
          >los estados hover no son t√©cnicamente obligatorios</strong
        >. Sin embargo, son una mejor pr√°ctica de usabilidad que beneficia a
        usuarios con rat√≥n cuando se implementan correctamente.
      </p>

      <BannerGrid columns="auto" gap="lg">
        <Banner title="‚ùå No son obligatorios para WCAG" variant="info">
          <p>
            Si tu sitio no tiene estados hover, a√∫n puede pasar una auditor√≠a
            WCAG. No hay criterios espec√≠ficos que los requieran.
          </p>
        </Banner>

        <Banner title="‚úÖ S√≠ son mejores pr√°cticas" variant="info">
          <p>
            Mejoran la usabilidad para usuarios con rat√≥n y ayudan a identificar
            elementos interactivos de forma inmediata.
          </p>
        </Banner>
      </BannerGrid>

      <Banner
        title="ü§î Pregunta clave: ¬øSe benefician todos los usuarios?"
        variant="concept"
      >
        <p>
          Si dise√±as estados hover para <strong>algunos usuarios</strong>, debes
          asegurar que funcionen para <strong>todos los usuarios</strong> (sin discriminaci√≥n).
        </p>
        <p>
          <strong>Principio:</strong> Lo que mejora la experiencia para algunos,
          debe ser accesible para todos.
        </p>
      </Banner>
    </section>

    <section>
      <h2>Las 6 preguntas reveladoras</h2>
      <p>
        Estas preguntas te ayudan a determinar si tu dise√±o de estados hover es
        realmente accesible seg√∫n las mejores pr√°cticas.
      </p>

      <OrderedList>
        <OrderedListItem number={1} title="¬øEs este un estado esencial?">
          <p>
            Si nadie pudiera ver este estado, ¬øser√≠a perjudicial para la
            funcionalidad o comprensi√≥n del sitio?
          </p>
          <p>
            <strong>Evaluaci√≥n:</strong> Los hover states son "esenciales como mejor
            pr√°ctica" pero no t√©cnicamente requeridos por WCAG.
          </p>
        </OrderedListItem>

        <OrderedListItem number={2} title="¬øEs independiente del color?">
          <p>
            El estado no debe depender √∫nicamente del color para comunicar el
            cambio. Debe incluir cambios estructurales como borde, subrayado o
            forma.
          </p>
          <Banner title="üí° T√©cnicas recomendadas" variant="warning">
            <ul>
              <li>Cambio de color + borde adicional</li>
              <li>Cambio de color + subrayado</li>
              <li>Cambio de color + sombra</li>
              <li>Cambio de forma + color</li>
            </ul>
          </Banner>
        </OrderedListItem>

        <OrderedListItem number={3} title="¬øTiene suficiente contraste?">
          <p>
            Los elementos gr√°ficos del estado hover deben tener contraste 3:1
            contra colores adyacentes. El texto debe mantener contraste 4.5:1.
          </p>
        </OrderedListItem>

        <OrderedListItem number={4} title="¬øEs suficientemente visible?">
          <p>
            El cambio debe ser lo suficientemente grande para ser percibido.
            Para outlines: m√≠nimo 1px alrededor del per√≠metro.
          </p>
        </OrderedListItem>

        <OrderedListItem number={5} title="¬øUsa se√±alizadores apropiados?">
          <p>
            ¬øEl estado realmente parece "hover" o podr√≠a confundirse con otro
            estado? Los usuarios deben reconocer inmediatamente que el elemento
            es interactivo.
          </p>
        </OrderedListItem>

        <OrderedListItem number={6} title="¬øEs consistente con el foco?">
          <p>
            <strong>Mejor pr√°ctica:</strong> Los estados hover y focus deben ser
            visualmente consistentes para crear una experiencia unificada.
          </p>
        </OrderedListItem>
      </OrderedList>
    </section>

    <section>
      <h2>Ejemplos pr√°cticos comparativos</h2>

      <Banner title="üí° Tip de prueba" variant="tip">
        Usa tanto el rat√≥n (hover) como el teclado (Tab) para navegar y comparar
        si ambos estados se ven similares y apropiados.
      </Banner>

      <Banner
        title="‚úÖ Estado hover consistente con foco"
        variant="good"
        highContrast
      >
        <div class="demo-container">
          <div class="demo-buttons">
            <button class="demo-btn consistent-state">Bot√≥n consistente</button>
            <input
              type="text"
              class="demo-input consistent-state"
              placeholder="Input consistente..."
            />
            <a href="#" class="demo-link consistent-state">Enlace consistente</a
            >
          </div>
          <div class="demo-explanation">
            <p><strong>Por qu√© funciona:</strong></p>
            <ul>
              <li>Hover y focus usan el mismo outline negro de 2px</li>
              <li>Ambos estados son independientes del color</li>
              <li>El contraste es excelente en ambos casos</li>
              <li>Experiencia unificada para todos los usuarios</li>
            </ul>
          </div>
        </div>
      </Banner>

      <Banner title="‚ùå Estados inconsistentes" variant="bad" highContrast>
        <div class="demo-container">
          <div class="demo-buttons">
            <button class="demo-btn inconsistent-hover"
              >Hover inconsistente</button
            >
            <input
              type="text"
              class="demo-input inconsistent-hover"
              placeholder="Input inconsistente..."
            />
            <a href="#" class="demo-link inconsistent-hover"
              >Enlace inconsistente</a
            >
          </div>
          <div class="demo-explanation">
            <p><strong>Por qu√© confunde:</strong></p>
            <ul>
              <li>Hover cambia color, focus usa outline</li>
              <li>Experiencias completamente diferentes</li>
              <li>Usuarios de teclado ven algo distinto</li>
              <li>Inconsistencia genera confusi√≥n</li>
            </ul>
          </div>
        </div>
      </Banner>
    </section>

    <Banner title="‚ùå Solo cambio de color" variant="bad" highContrast>
      <div class="demo-container">
        <div class="demo-buttons">
          <button class="demo-btn color-only-hover">Solo color</button>
          <input
            type="text"
            class="demo-input color-only-hover"
            placeholder="Solo cambio de color..."
          />
          <a href="#" class="demo-link color-only-hover">Solo color</a>
        </div>
        <div class="demo-explanation">
          <p><strong>Por qu√© falla:</strong></p>
          <ul>
            <li>Depende √∫nicamente del color para comunicar el estado</li>
            <li>Personas con daltonismo pueden no percibir el cambio</li>
            <li>
              No cumple con <a
                href="https://www.w3.org/WAI/WCAG22/Understanding/use-of-color.html"
                target="_blank"
                rel="noopener">WCAG 1.4.1 (Uso del Color)</a
              >
            </li>
            <li>Falta se√±alizador estructural adicional</li>
          </ul>
        </div>
      </div>
    </Banner>

    <section>
      <h2>Contenido adicional en hover</h2>
      <p>
        Si tu estado hover muestra contenido adicional (tooltips, men√∫s), debe
        cumplir <a
          href="https://www.w3.org/WAI/WCAG22/Understanding/content-on-hover-or-focus.html"
          target="_blank"
          rel="noopener">WCAG 1.4.13</a
        >: ser desechable, hover-able y persistente.
      </p>

      <BannerGrid columns="3" minWidth="300px">
        <Banner title="‚úÖ Tooltip accesible" variant="good">
          <div class="tooltip-demo">
            <button
              class="tooltip-btn accessible-tooltip"
              id="accessible-tooltip-btn"
            >
              Hover o clic para tooltip accesible
            </button>
            <div
              class="tooltip-content accessible-tooltip-content"
              id="accessible-tooltip"
              role="tooltip"
            >
              <p>Este tooltip cumple WCAG 1.4.13:</p>
              <ul>
                <li>‚úÖ Permanece al hacer hover sobre √©l</li>
                <li>‚úÖ Persistente hasta ser desechado</li>
                <li>‚úÖ Funciona con clic y hover</li>
              </ul>
            </div>
          </div>
        </Banner>

        <Banner title="‚ùå Tooltip problem√°tico" variant="bad">
          <div class="tooltip-demo">
            <button class="tooltip-btn problematic-tooltip">
              Hover para tooltip problem√°tico
            </button>
            <div class="tooltip-content problematic-tooltip-content">
              <p>Este tooltip falla WCAG 1.4.13:</p>
              <ul>
                <li>‚ùå Desaparece al mover el rat√≥n</li>
                <li>‚ùå No es hover-able (desaparece)</li>
                <li>‚ùå Solo funciona con hover</li>
              </ul>
            </div>
          </div>
        </Banner>

        <Banner
          title="üéØ Estados de cursor"
          variant="info"
          subtitle="Los cambios de cursor (flecha ‚Üí mano) est√°n controlados por el navegador y est√°n exentos de requisitos de contraste WCAG."
        >
          <div class="cursor-demo">
            <button class="cursor-btn">Cambio de cursor nativo</button>
          </div>
        </Banner>
      </BannerGrid>
    </section>

    <section>
      <h2>Mejores pr√°cticas t√©cnicas</h2>

      <BannerGrid columns="3" minWidth="300px">
        <Banner title="üíª CSS: :hover y :focus juntos" variant="info">
          <p>
            Usa ambos pseudo-selectores para crear experiencias consistentes.
          </p>
          <pre><code>{`.button:hover, 
.button:focus {
  outline: 2px solid #000;
  outline-offset: 2px;
}`}
</code></pre>
        </Banner>

        <Banner title="üé® Dise√±o: Se√±alizadores m√∫ltiples" variant="info">
          <p>
            Combina cambios de color con cambios estructurales para mejor
            accesibilidad.
          </p>
          <div class="signifier-demo">
            <button class="multi-signifier-btn">Color + Borde + Sombra</button>
          </div>
        </Banner>

        <Banner title="‚å®Ô∏è Teclado: Funcionalidad equivalente" variant="info">
          <p>
            Cualquier acci√≥n de hover debe tener un equivalente de teclado
            accesible.
          </p>
          <div class="keyboard-demo">
            <button class="keyboard-equivalent">Funciona con Tab y hover</button
            >
          </div>
        </Banner>
      </BannerGrid>
    </section>

    <Checklist
      title="‚úÖ Antes de publicar, verifica:"
      items={checklistItems}
      variant="success"
    />

    <ToolsSection title="Herramientas √∫tiles" tools={hoverTools}>
      <p>Para verificar la accesibilidad de tus estados hover:</p>

      <BannerGrid columns="auto" minWidth="300px">
        <Banner title="üîç Pruebas de contraste" variant="info">
          <ul>
            <li>
              <strong>Regla 3:1:</strong> Para elementos gr√°ficos (bordes, iconos)
            </li>
            <li><strong>Regla 4.5:1:</strong> Para texto en elementos</li>
            <li><strong>Prueba:</strong> Entre estados default y hover</li>
          </ul>
        </Banner>

        <Banner title="üë• Pruebas de usabilidad" variant="info">
          <ul>
            <li><strong>Pregunta:</strong> "¬øQu√© estado representa esto?"</li>
            <li><strong>Observa:</strong> Si reconocen interactividad</li>
            <li><strong>Valida:</strong> Consistencia entre hover y focus</li>
          </ul>
        </Banner>
      </BannerGrid>
    </ToolsSection>
  </article>
</Layout>

<style lang="scss">
  article {
    max-width: 90ch;
  }

  .demo-container {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--spacing-xl);
    align-items: start;
  }

  .demo-buttons {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
  }

  .demo-btn {
    padding: var(--spacing-sm) var(--spacing-md);
    border: none;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    background-color: var(--color-primary);
    color: white;
    transition: all 0.2s;
  }

  .demo-input {
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid var(--color-border);
    border-radius: 6px;
    font-size: 0.875rem;
  }

  .demo-link {
    color: var(--color-primary);
    text-decoration: underline;
    padding: var(--spacing-xs) var(--spacing-sm);
    border-radius: 4px;
    display: inline-block;

    &:hover {
      background-color: var(--color-surface);
    }
  }

  /* Estados consistentes hover + focus */
  .consistent-state {
    &:hover,
    &:focus {
      outline: 2px solid #000;
      outline-offset: 2px;
    }
  }

  /* Estados inconsistentes */
  .inconsistent-hover {
    &:hover {
      background-color: #2563eb;
      transform: translateY(-1px);
    }

    &:focus {
      outline: 2px solid #dc2626;
      outline-offset: 1px;
    }
  }

  /* Solo cambio de color */
  .color-only-hover {
    &:hover {
      background-color: #16a34a;
    }

    &:focus {
      background-color: #16a34a;
    }
  }

  .demo-explanation {
    background-color: var(--color-background);
    padding: var(--spacing-md);
    border-radius: 6px;

    ul {
      margin: var(--spacing-sm) 0 0 0;
      padding-left: var(--spacing-lg);
    }

    li {
      margin-bottom: var(--spacing-xs);
      font-size: 0.875rem;
    }
  }

  /* Tooltip demos */
  .tooltip-demo {
    position: relative;
    margin-bottom: var(--spacing-md);
    display: inline-block; /* Ensure proper positioning context */
  }

  .tooltip-btn {
    background-color: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    display: block; /* Ensure button takes full width of container */
  }

  /* Accessible tooltip - compliant with WCAG 1.4.13 */
  .accessible-tooltip-content {
    display: none;
    position: absolute;
    top: calc(100% - 1px); /* Slight overlap to ensure continuous area */
    left: 0;
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 6px;
    padding: var(--spacing-sm);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    z-index: 10;
    min-width: 250px;

    &.show {
      display: block;
    }

    /* Important: tooltip content must be hoverable */
    &:hover {
      display: block;
    }

    p {
      margin: 0 0 var(--spacing-xs) 0;
      font-size: 0.875rem;
    }

    ul {
      margin: 0;
      padding-left: var(--spacing-lg);
      font-size: 0.875rem;
    }

    li {
      margin-bottom: var(--spacing-xs);
    }
  }

  /* Create a continuous hover area using the container */
  .tooltip-demo:hover .accessible-tooltip-content,
  .accessible-tooltip:focus + .accessible-tooltip-content {
    display: block;
  }

  /* Problematic tooltip - violates WCAG 1.4.13 */
  .problematic-tooltip:hover + .problematic-tooltip-content {
    display: block;
  }

  .problematic-tooltip-content {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    background-color: var(--color-surface);
    border: 1px solid var(--color-border);
    border-radius: 6px;
    padding: var(--spacing-sm);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    z-index: 10;
    min-width: 250px;
    margin-top: var(--spacing-xs);

    /* This tooltip is NOT hoverable - it disappears */
    /* No hover state on the tooltip content itself */

    p {
      margin: 0 0 var(--spacing-xs) 0;
      font-size: 0.875rem;
    }

    ul {
      margin: 0;
      padding-left: var(--spacing-lg);
      font-size: 0.875rem;
    }

    li {
      margin-bottom: var(--spacing-xs);
    }
  }

  /* Cursor demo */
  .cursor-btn {
    background-color: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;

    &:hover {
      background-color: #1e40af;
    }
  }

  /* Multi-signifier demo */
  .multi-signifier-btn {
    background-color: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.2s;

    &:hover,
    &:focus {
      background-color: #1e40af;
      border: 2px solid #000;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    }
  }

  /* Keyboard equivalent demo */
  .keyboard-equivalent {
    background-color: var(--color-primary);
    color: white;
    border: none;
    padding: var(--spacing-sm) var(--spacing-md);
    border-radius: 6px;
    cursor: pointer;
    font-weight: 500;

    &:hover,
    &:focus {
      outline: 2px solid #000;
      outline-offset: 2px;
      background-color: #1e40af;
    }
  }

  .signifier-demo,
  .keyboard-demo {
    margin-top: var(--spacing-sm);
  }

  @media (max-width: 768px) {
    .demo-container {
      grid-template-columns: 1fr;
      gap: var(--spacing-lg);
    }
  }
</style>

<script>
  // Accessible tooltip implementation following WCAG 1.4.13
  document.addEventListener('DOMContentLoaded', function () {
    const tooltipBtn = document.getElementById('accessible-tooltip-btn')
    const tooltip = document.getElementById('accessible-tooltip')
    let isTooltipVisible = false

    if (tooltipBtn && tooltip) {
      // Toggle tooltip on click
      tooltipBtn.addEventListener('click', function (e) {
        e.preventDefault()
        isTooltipVisible = !isTooltipVisible

        if (isTooltipVisible) {
          tooltip.classList.add('show')
          // Set focus to tooltip for keyboard navigation
          tooltip.setAttribute('tabindex', '-1')
          tooltip.focus()
        } else {
          tooltip.classList.remove('show')
        }
      })

      // Handle Escape key to dismiss tooltip (WCAG 1.4.13 requirement)
      document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape' && isTooltipVisible) {
          tooltip.classList.remove('show')
          isTooltipVisible = false
          // Return focus to trigger button
          tooltipBtn.focus()
        }
      })

      // Keep tooltip visible when hovering over it (WCAG 1.4.13 requirement)
      tooltip.addEventListener('mouseenter', function () {
        if (isTooltipVisible) {
          tooltip.classList.add('show')
        }
      })

      // Optional: Close tooltip when clicking outside
      document.addEventListener('click', function (e) {
        const target = e.target as HTMLElement
        if (
          isTooltipVisible &&
          !tooltipBtn.contains(target) &&
          !tooltip.contains(target)
        ) {
          tooltip.classList.remove('show')
          isTooltipVisible = false
        }
      })
    }
  })
</script>
